{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/keyboard-5742b5da.js"],"names":["__webpack_require__","r","__webpack_exports__","d","KEYBOARD_DID_CLOSE","KEYBOARD_DID_OPEN","copyVisualViewport","keyboardDidClose","keyboardDidOpen","keyboardDidResize","resetKeyboardAssist","setKeyboardClose","setKeyboardOpen","startKeyboardAssist","trackViewportChanges","previousVisualViewport","currentVisualViewport","keyboardOpen","e","startNativeListeners","visualViewport","onresize","addEventListener","fireKeyboardOpenEvent","fireKeyboardCloseEvent","height","scale","width","innerHeight","t","keyboardHeight","i","CustomEvent","detail","dispatchEvent","Object","assign","Math","round","offsetTop","offsetLeft","pageTop","pageLeft"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,uCAAAE,IAAAJ,EAAAG,EAAAD,EAAA,sCAAAG,IAAAL,EAAAG,EAAAD,EAAA,uCAAAI,IAAAN,EAAAG,EAAAD,EAAA,qCAAAK,IAAAP,EAAAG,EAAAD,EAAA,oCAAAM,IAAAR,EAAAG,EAAAD,EAAA,sCAAAO,IAAAT,EAAAG,EAAAD,EAAA,wCAAAQ,IAAAV,EAAAG,EAAAD,EAAA,qCAAAS,IAAAX,EAAAG,EAAAD,EAAA,oCAAAU,IAAAZ,EAAAG,EAAAD,EAAA,wCAAAW,IAAAb,EAAAG,EAAAD,EAAA,yCAAAY,IAAA,IAAAT,EAAA,qBACAD,EAAA,qBAEAW,EAAA,GACAC,EAAA,GACAC,GAAA,EAEAP,EAAA,WACAK,EAAA,GACAC,EAAA,GACAC,GAAA,GAGAJ,EAAA,SAAAK,GACAC,EAAAD,GAEAA,EAAAE,iBAIAJ,EAAAV,EAAAY,EAAAE,gBAEAF,EAAAE,eAAAC,SAAA,WACAP,EAAAI,GAEAV,KAAAC,EAAAS,GACAN,EAAAM,GACKX,EAAAW,IACLP,EAAAO,MAKAC,EAAA,SAAAD,GACAA,EAAAI,iBAAA,2BAAArB,GACA,OAAAW,EAAAM,EAAAjB,KAEAiB,EAAAI,iBAAA,6BACA,OAAAX,EAAAO,MAIAN,EAAA,SAAAM,EAAAjB,GACAsB,EAAAL,EAAAjB,GACAgB,GAAA,GAGAN,EAAA,SAAAO,GACAM,EAAAN,GACAD,GAAA,GAGAT,EAAA,WACA,IAAAU,GAAAH,EAAAU,OAAAT,EAAAS,QAAAT,EAAAU,MACA,OAAAT,GAAAF,EAAAY,QAAAX,EAAAW,OAAAT,EApDA,KAuDAT,EAAA,SAAAS,GACA,OAAAD,IAAAV,EAAAW,IAGAX,EAAA,SAAAW,GACA,OAAAD,GAAAD,EAAAS,SAAAP,EAAAU,aAGAL,EAAA,SAAAL,EAAAjB,GACA,IAAA4B,EAAA5B,IAAA6B,eAAAZ,EAAAU,YAAAZ,EAAAS,OACAM,EAAA,IAAAC,YAAA3B,EAAA,CACA4B,OAAA,CACAH,eAAAD,KAGAX,EAAAgB,cAAAH,IAGAP,EAAA,SAAAN,GACA,IAAAjB,EAAA,IAAA+B,YAAA5B,GACAc,EAAAgB,cAAAjC,IAGAa,EAAA,SAAAI,GACAH,EAAAoB,OAAAC,OAAA,GAA2CpB,GAC3CA,EAAAV,EAAAY,EAAAE,iBAGAd,EAAA,SAAAY,GACA,OACAS,MAAAU,KAAAC,MAAApB,EAAAS,OACAF,OAAAY,KAAAC,MAAApB,EAAAO,QACAc,UAAArB,EAAAqB,UACAC,WAAAtB,EAAAsB,WACAC,QAAAvB,EAAAuB,QACAC,SAAAxB,EAAAwB,SACAhB,MAAAR,EAAAQ","file":"static/js/51.76fd24ba.chunk.js","sourcesContent":["var KEYBOARD_DID_OPEN = \"ionKeyboardDidShow\";\nvar KEYBOARD_DID_CLOSE = \"ionKeyboardDidHide\";\nvar KEYBOARD_THRESHOLD = 150;\nvar previousVisualViewport = {};\nvar currentVisualViewport = {};\nvar keyboardOpen = false;\n\nvar resetKeyboardAssist = function resetKeyboardAssist() {\n  previousVisualViewport = {};\n  currentVisualViewport = {};\n  keyboardOpen = false;\n};\n\nvar startKeyboardAssist = function startKeyboardAssist(e) {\n  startNativeListeners(e);\n\n  if (!e.visualViewport) {\n    return;\n  }\n\n  currentVisualViewport = copyVisualViewport(e.visualViewport);\n\n  e.visualViewport.onresize = function () {\n    trackViewportChanges(e);\n\n    if (keyboardDidOpen() || keyboardDidResize(e)) {\n      setKeyboardOpen(e);\n    } else if (keyboardDidClose(e)) {\n      setKeyboardClose(e);\n    }\n  };\n};\n\nvar startNativeListeners = function startNativeListeners(e) {\n  e.addEventListener(\"keyboardDidShow\", function (r) {\n    return setKeyboardOpen(e, r);\n  });\n  e.addEventListener(\"keyboardDidHide\", function () {\n    return setKeyboardClose(e);\n  });\n};\n\nvar setKeyboardOpen = function setKeyboardOpen(e, r) {\n  fireKeyboardOpenEvent(e, r);\n  keyboardOpen = true;\n};\n\nvar setKeyboardClose = function setKeyboardClose(e) {\n  fireKeyboardCloseEvent(e);\n  keyboardOpen = false;\n};\n\nvar keyboardDidOpen = function keyboardDidOpen() {\n  var e = (previousVisualViewport.height - currentVisualViewport.height) * currentVisualViewport.scale;\n  return !keyboardOpen && previousVisualViewport.width === currentVisualViewport.width && e > KEYBOARD_THRESHOLD;\n};\n\nvar keyboardDidResize = function keyboardDidResize(e) {\n  return keyboardOpen && !keyboardDidClose(e);\n};\n\nvar keyboardDidClose = function keyboardDidClose(e) {\n  return keyboardOpen && currentVisualViewport.height === e.innerHeight;\n};\n\nvar fireKeyboardOpenEvent = function fireKeyboardOpenEvent(e, r) {\n  var t = r ? r.keyboardHeight : e.innerHeight - currentVisualViewport.height;\n  var i = new CustomEvent(KEYBOARD_DID_OPEN, {\n    detail: {\n      keyboardHeight: t\n    }\n  });\n  e.dispatchEvent(i);\n};\n\nvar fireKeyboardCloseEvent = function fireKeyboardCloseEvent(e) {\n  var r = new CustomEvent(KEYBOARD_DID_CLOSE);\n  e.dispatchEvent(r);\n};\n\nvar trackViewportChanges = function trackViewportChanges(e) {\n  previousVisualViewport = Object.assign({}, currentVisualViewport);\n  currentVisualViewport = copyVisualViewport(e.visualViewport);\n};\n\nvar copyVisualViewport = function copyVisualViewport(e) {\n  return {\n    width: Math.round(e.width),\n    height: Math.round(e.height),\n    offsetTop: e.offsetTop,\n    offsetLeft: e.offsetLeft,\n    pageTop: e.pageTop,\n    pageLeft: e.pageLeft,\n    scale: e.scale\n  };\n};\n\nexport { KEYBOARD_DID_CLOSE, KEYBOARD_DID_OPEN, copyVisualViewport, keyboardDidClose, keyboardDidOpen, keyboardDidResize, resetKeyboardAssist, setKeyboardClose, setKeyboardOpen, startKeyboardAssist, trackViewportChanges };"],"sourceRoot":""}