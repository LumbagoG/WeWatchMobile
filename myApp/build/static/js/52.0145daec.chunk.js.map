{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/shadow-css-58508bb5.js"],"names":["__webpack_require__","r","__webpack_exports__","d","scopeCss","tslib__WEBPACK_IMPORTED_MODULE_0__","_parenSuffix","_cssColonHostRe","RegExp","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","_commentWithHashRe","_ruleRe","_curlyRe","processRules","e","t","escapeBlocks","o","escapedString","replace","n","arguments","length","s","l","a","c","startsWith","blocks","substring","p","selector","content","split","push","join","convertColonRule","trim","_polyfillHost","colonHostPartReplacer","colonHostContextPartReplacer","indexOf","selectorNeedsScoping","makeScopeMatcher","test","applyStrictSelectorScope","i","lastIndex","applySimpleSelectorScope","match","placeholders","safeSelector","f","exec","u","_","slice","index","m","restoreSafeSelector","scopeSelectors","map","scopeSelector","scopeCssText","v","trimRight","orgSelector","updatedSelector","selectors","cssText","convertColonSlotted","convertColonHostContext","convertColonHost","insertPolyfillHostInCssText","reduce","convertShadowDOMSelectors","slottedSelectors","extractCommentsWithHash","stripComments","placeholder","comment","Object","forEach"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,6BAAAE,IAAA,IAAAC,EAAAL,EAAA,GA8CAM,EAAA,kDAEAC,EAAA,IAAAC,OAAA,kBAAAF,EAAA,OAEAG,EAAA,IAAAD,OAAA,qBAAAF,EAAA,OAEAI,EAAA,IAAAF,OAAA,qBAAAF,EAAA,OAIAK,EAAA,uCACAC,EAAA,2BAEAC,EAAA,oBACAC,EAAA,WACAC,EAAA,eACAC,EAAA,mBACAC,EAAA,uBAMAC,EAAA,+CAMAC,EAAA,wDACAC,EAAA,UAKAC,EAAA,SAAAC,EAAArB,GACA,IAAAsB,EAAAC,EAAAF,GACAG,EAAA,EACA,OAAAF,EAAAG,cAAAC,QAAAR,EAAA,WAGA,IAFA,IAAAG,EAAA,GAEAM,EAAA,EAAmBA,EAAAC,UAAAC,OAAsBF,IACzCN,EAAAM,GAAAC,UAAAD,GAGA,IAAAG,EAAAT,EAAA,GACAU,EAAA,GACAC,EAAAX,EAAA,GACAY,EAAA,GAEAD,KAAAE,WAAA,cACAH,EAAAT,EAAAa,OAAAX,KACAQ,IAAAI,UAnBA,UAmBAP,OAAA,GACAI,EAAA,KAGA,IAIAI,EAAArC,EAJA,CACAsC,SAAAR,EACAS,QAAAR,IAGA,SAAAV,EAAA,GAAAgB,EAAAC,SAAAjB,EAAA,GAAAY,EAAAI,EAAAE,QAAAP,KAIAT,EAAA,SAAAF,GAOA,IANA,IAAArB,EAAAqB,EAAAmB,MAAArB,GACAG,EAAA,GACAE,EAAA,GACAG,EAAA,EACAG,EAAA,GAEAC,EAAA,EAAiBA,EAAA/B,EAAA6B,OAAcE,IAAA,CAC/B,IAAAC,EAAAhC,EAAA+B,GAzCA,MA2CAC,GACAL,IAGAA,EAAA,EACAG,EAAAW,KAAAT,IAEAF,EAAAD,OAAA,IACAL,EAAAiB,KAAAX,EAAAY,KAAA,KACApB,EAAAmB,KAnDA,WAoDAX,EAAA,IAGAR,EAAAmB,KAAAT,IAzDA,MA4DAA,GACAL,IAaA,OATAG,EAAAD,OAAA,IACAL,EAAAiB,KAAAX,EAAAY,KAAA,KACApB,EAAAmB,KAjEA,YAoEA,CACAhB,cAAAH,EAAAoB,KAAA,IACAP,OAAAX,IAUAmB,EAAA,SAAAtB,EAAArB,EAAAsB,GACA,OAAAD,EAAAK,QAAA1B,EAAA,WAGA,IAFA,IAAAqB,EAAA,GAEArB,EAAA,EAAmBA,EAAA4B,UAAAC,OAAsB7B,IACzCqB,EAAArB,GAAA4B,UAAA5B,GAGA,GAAAqB,EAAA,IAIA,IAHA,IAAAG,EAAAH,EAAA,GAAAmB,MAAA,KACAb,EAAA,GAEAG,EAAA,EAAqBA,EAAAN,EAAAK,OAAcC,IAAA,CACnC,IAAAC,EAAAP,EAAAM,GAAAc,OACA,IAAAb,EAAA,MACAJ,EAAAc,KAAAnB,EAxHAuB,+BAwHAd,EAAAV,EAAA,KAGA,OAAAM,EAAAe,KAAA,KAEA,MA7HAG,+BA6HAxB,EAAA,MAKAyB,EAAA,SAAAzB,EAAArB,EAAAsB,GACA,OAAAD,EAAArB,EAAA0B,QA/IA,iBA+IA,IAAAJ,GAOAyB,EAAA,SAAA1B,EAAArB,EAAAsB,GACA,OAAAtB,EAAAgD,QAvJA,mBAuJA,EACAF,EAAAzB,EAAArB,EAAAsB,GAEAD,EAAArB,EAAAsB,EAAA,KAAAtB,EAAA,IAAAqB,EAAAC,GAqEA2B,EAAA,SAAA5B,EAAArB,GAEA,OATA,SAAAqB,GAIA,OADAA,IAAAK,QAFA,MAEA,OAAAA,QADA,MACA,OACA,IAAAnB,OAAA,KAAAc,EAAA,mCAIA6B,CAAAlD,GACAmD,KAAA9B,IAkBA+B,EAAA,SAAA/B,EAAArB,EAAAsB,GA8CA,IA7CA,IAwCA+B,EA9BA1B,EAAA,KATA3B,IAAA0B,QADA,mBACA,SAAAL,GAGA,IAFA,IAAArB,EAAA,GAEAsB,EAAA,EAAmBA,EAAAM,UAAAC,OAAsBP,IACzCtB,EAAAsB,EAAA,GAAAM,UAAAN,GAGA,OAAAtB,EAAA,MAIA8B,EAAA,SAAAT,GACA,IAAAG,EAAAH,EAAAuB,OAEA,IAAApB,EACA,SAGA,GAAAH,EAAA2B,QA3PAH,iCA2PA,EACArB,EApCA,SAAAH,EAAArB,EAAAsB,GAGA,GAFAV,EAAA0C,UAAA,EAEA1C,EAAAuC,KAAA9B,GAAA,CACA,IAAAG,EAAA,IAAAF,EACA,OAAAD,EAAAK,QAAAhB,EAAA,SAAAW,EAAArB,GACA,OAAAA,EAAA0B,QAAA,2BAAAL,EAAArB,EAAAsB,EAAAK,GACA,OAAA3B,EAAAwB,EAAAF,EAAAK,MAEKD,QAAAd,EAAAY,EAAA,KAGL,OAAAxB,EAAA,IAAAqB,EAwBAkC,CAAAlC,EAAArB,EAAAsB,OACK,CACL,IAAAQ,EAAAT,EAAAK,QAAAd,EAAA,IAEA,GAAAkB,EAAAD,OAAA,GACA,IAAAE,EAAAD,EAAA0B,MAAA,mBAEAzB,IACAP,EAAAO,EAAA,GAAAJ,EAAAI,EAAA,GAAAA,EAAA,KAKA,OAAAP,GAGAO,EArTA,SAAAV,GACA,IAAArB,EAAA,GACAsB,EAAA,EAkBA,MAJA,CACAiB,SAbAlB,IAAAK,QAAA,yBAAAL,EAAAG,GACA,IAAAG,EAAA,QAAAL,EAAA,KAGA,OAFAtB,EAAAyC,KAAAjB,GACAF,IACAK,KAEAD,QAAA,qCAAAL,EAAAG,EAAAG,GACA,IAAAG,EAAA,QAAAR,EAAA,KAGA,OAFAtB,EAAAyC,KAAAd,GACAL,IACAE,EAAAM,IAIA2B,aAAAzD,GAmSA0D,CAAArC,GAEAW,EAAA,GACAC,EAAA,EAEAI,EAAA,sBAEAsB,KANAtC,EAAAU,EAAAQ,SAKAS,QAlRAH,iCAkRA,GAGA,QAAAQ,EAAAhB,EAAAuB,KAAAvC,KAAA,CACA,IAAAwC,EAAAR,EAAA,GAEAS,EAAAzC,EAAA0C,MAAA9B,EAAAoB,EAAAW,OAAApB,OAIAZ,KAFA2B,KAAAG,EAAAd,QA1RAH,iCA0RA,GACAf,EAAAgC,MACA,IAAAD,EAAA,IACA5B,EAAAI,EAAAiB,UAGA,IAAAW,EAAA5C,EAAAe,UAAAH,GAGA,OADAD,IADA2B,KAAAM,EAAAjB,QAjSAH,iCAiSA,GACAf,EAAAmC,KApTA,SAAA5C,EAAArB,GACA,OAAAA,EAAA0B,QAAA,yBAAA1B,EAAAsB,GACA,OAAAD,GAAAC,KAmTA4C,CAAAnC,EAAA0B,aAAAzB,IAiBAmC,EAAA,SAAAA,EAAA9C,EAAArB,EAAAsB,EAAAE,EAAAG,GACA,OAAAP,EAAAC,EAAA,SAAAA,GACA,IAAAM,EAAAN,EAAAiB,SACAR,EAAAT,EAAAkB,QAYA,MAVA,MAAAlB,EAAAiB,SAAA,GACAX,EApBA,SAAAN,EAAArB,EAAAsB,EAAAE,GACA,OAAAH,EAAAmB,MAAA,KAAA4B,IAAA,SAAA/C,GACA,OAAAG,GAAAH,EAAA2B,QAAA,IAAAxB,IAAA,EACAH,EAAAuB,OAGAK,EAAA5B,EAAArB,GACAoD,EAAA/B,EAAArB,EAAAsB,GAAAsB,OAEAvB,EAAAuB,SAEGF,KAAA,MASH2B,CAAAhD,EAAAiB,SAAAtC,EAAAsB,EAAAE,IACKH,EAAAiB,SAAAJ,WAAA,WAAAb,EAAAiB,SAAAJ,WAAA,cAAAb,EAAAiB,SAAAJ,WAAA,UAAAb,EAAAiB,SAAAJ,WAAA,gBACLJ,EAAAqC,EAAA9C,EAAAkB,QAAAvC,EAAAsB,EAAAE,IAGA,CACAc,SAAAX,EAAAD,QAAA,UAAiC,KAAAkB,OACjCL,QAAAT,MAMAwC,EAAA,SAAAjD,EAAArB,EAAAsB,EAAAE,EAAAG,GAIA,IAAAG,EAzLA,SAAAT,EAAArB,GACA,IAAAsB,EAAA,IAAAtB,EAAA,MACAwB,EAAA,GAwCA,OAvCAH,IAAAK,QAAAjB,EAAA,WAGA,IAFA,IAAAY,EAAA,GAEArB,EAAA,EAAmBA,EAAA4B,UAAAC,OAAsB7B,IACzCqB,EAAArB,GAAA4B,UAAA5B,GAGA,GAAAqB,EAAA,IAMA,IALA,IAAAM,EAAAN,EAAA,GAAAuB,OACAd,EAAAT,EAAA,GACAU,EAAAT,EAAAK,EAAAG,EACAE,EAAA,GAEAC,EAAAZ,EAAA,KAA4BY,GAAA,EAAQA,IAAA,CACpC,IAAAoB,EAAAhC,EAAA,GAAAY,GAEA,SAAAoB,GAAoB,MAAAA,EACpB,MAGArB,EAAAqB,EAAArB,EAGA,IAAAK,EAAAL,EAAAD,EACAwC,EAAA,GAAAvC,EAAAwC,YAAAzC,EAAAa,OAEA,GAAAP,EAAAO,SAAA2B,EAAA3B,OAAA,CACA,IAAAe,EAAAY,EAAA,KAAAlC,EACAb,EAAAiB,KAAA,CACAgC,YAAApC,EACAqC,gBAAAf,IAIA,OAAA5B,EAEA,MAzLAc,+BAyLAxB,EAAA,KAGA,CACAsD,UAAAnD,EACAoD,QAAAvD,GA6IAwD,CADAxD,EAxIA,SAAAA,GACA,OAAAsB,EAAAtB,EAAAb,EAAAuC,GAuIA+B,CADAzD,EAnMA,SAAAA,GACA,OAAAsB,EAAAtB,EAAAf,EAAAwC,GAkMAiC,CADA1D,EApOA,SAAAA,GAEA,OADAA,IAAAK,QAAAX,EA/GA,qBA+GAW,QAAAb,EAjHA,kBAiHAa,QAAAZ,EAhHA,qBAmVAkE,CAAA3D,KAGAG,GAUA,OARAH,EAvIA,SAAAA,GACA,OAAAV,EAAAsE,OAAA,SAAA5D,EAAArB,GACA,OAAAqB,EAAAK,QAAA1B,EAAA,MACGqB,GAoIH6D,CADA7D,EAAAS,EAAA8C,SAGA5E,IACAqB,EAAA8C,EAAA9C,EAAArB,EAAAsB,EAAAE,IAKA,CACAoD,SAFAvD,GADAA,IAAAK,QAAA,oCAAAJ,IACAI,QAAA,uBAA8B,SAE9BkB,OACAuC,iBAAArD,EAAA6C,YAIAxE,EAAA,SAAAkB,EAAArB,EAAAsB,GACA,IAAAE,EAAAxB,EAAA,KACA2B,EAAA3B,EAAA,KACA8B,EA7UA,SAAAT,GACA,OAAAA,EAAAmC,MAAAvC,IAAA,GA4UAmE,CAAA/D,GACAA,EApVA,SAAAA,GACA,OAAAA,EAAAK,QAAAV,EAAA,IAmVAqE,CAAAhE,GACA,IAAAU,EAAA,GAEA,GAAAT,EAAA,CACA,IAAAU,EAAA,SAAAX,GACA,IAAArB,EAAA,UAAA+B,EAAAF,OAAA,QACAP,EAAA,OAAAD,EAAAiB,SAAA,KAMA,OALAP,EAAAU,KAAA,CACA6C,YAAAtF,EACAuF,QAAAjE,IAEAD,EAAAiB,SAAAtC,EAAAqB,EAAAiB,SACAjB,GAGAA,EAAAD,EAAAC,EAAA,SAAAA,GACA,YAAAA,EAAAiB,SAAA,GACAN,EAAAX,GACOA,EAAAiB,SAAAJ,WAAA,WAAAb,EAAAiB,SAAAJ,WAAA,cAAAb,EAAAiB,SAAAJ,WAAA,UAAAb,EAAAiB,SAAAJ,WAAA,cACPb,EAAAkB,QAAAnB,EAAAC,EAAAkB,QAAAP,GACAX,GAGAA,IAIA,IAAAY,EAAAqC,EAAAjD,EAAArB,EAAAwB,EAAAG,GAcA,OAbAN,EAAMmE,OAAApF,EAAA,EAAAoF,CAAc,CAAAvD,EAAA2C,SAAA9C,GAAAY,KAAA,MAEpBpB,GACAS,EAAA0D,QAAA,SAAAzF,GACA,IAAAsB,EAAAtB,EAAAsF,YACA9D,EAAAxB,EAAAuF,QACAlE,IAAAK,QAAAJ,EAAAE,KAIAS,EAAAkD,iBAAAM,QAAA,SAAAzF,GACAqB,IAAAK,QAAA1B,EAAAyE,YAAAzE,EAAA0E,mBAEArD","file":"static/js/52.0145daec.chunk.js","sourcesContent":["import { __spreadArrays } from \"tslib\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\n\nvar safeSelector = function safeSelector(e) {\n  var r = [];\n  var t = 0;\n  var o;\n  e = e.replace(/(\\[[^\\]]*\\])/g, function (e, o) {\n    var n = \"__ph-\" + t + \"__\";\n    r.push(o);\n    t++;\n    return n;\n  });\n  o = e.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (e, o, n) {\n    var s = \"__ph-\" + t + \"__\";\n    r.push(n);\n    t++;\n    return o + s;\n  });\n  var n = {\n    content: o,\n    placeholders: r\n  };\n  return n;\n};\n\nvar restoreSafeSelector = function restoreSafeSelector(e, r) {\n  return r.replace(/__ph-(\\d+)__/g, function (r, t) {\n    return e[+t];\n  });\n};\n\nvar _polyfillHost = \"-shadowcsshost\";\nvar _polyfillSlotted = \"-shadowcssslotted\";\nvar _polyfillHostContext = \"-shadowcsscontext\";\n\nvar _parenSuffix = \")(?:\\\\((\" + \"(?:\\\\([^)(]*\\\\)|[^)(]*)+?\" + \")\\\\))?([^,{]*)\";\n\nvar _cssColonHostRe = new RegExp(\"(\" + _polyfillHost + _parenSuffix, \"gim\");\n\nvar _cssColonHostContextRe = new RegExp(\"(\" + _polyfillHostContext + _parenSuffix, \"gim\");\n\nvar _cssColonSlottedRe = new RegExp(\"(\" + _polyfillSlotted + _parenSuffix, \"gim\");\n\nvar _polyfillHostNoCombinator = _polyfillHost + \"-no-combinator\";\n\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [/::shadow/g, /::content/g];\nvar _selectorReSuffix = \"([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$\";\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n\nvar stripComments = function stripComments(e) {\n  return e.replace(_commentRe, \"\");\n};\n\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\n\nvar extractCommentsWithHash = function extractCommentsWithHash(e) {\n  return e.match(_commentWithHashRe) || [];\n};\n\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = \"{\";\nvar CLOSE_CURLY = \"}\";\nvar BLOCK_PLACEHOLDER = \"%BLOCK%\";\n\nvar processRules = function processRules(e, r) {\n  var t = escapeBlocks(e);\n  var o = 0;\n  return t.escapedString.replace(_ruleRe, function () {\n    var e = [];\n\n    for (var n = 0; n < arguments.length; n++) {\n      e[n] = arguments[n];\n    }\n\n    var s = e[2];\n    var l = \"\";\n    var a = e[4];\n    var c = \"\";\n\n    if (a && a.startsWith(\"{\" + BLOCK_PLACEHOLDER)) {\n      l = t.blocks[o++];\n      a = a.substring(BLOCK_PLACEHOLDER.length + 1);\n      c = \"{\";\n    }\n\n    var i = {\n      selector: s,\n      content: l\n    };\n    var p = r(i);\n    return \"\" + e[1] + p.selector + e[3] + c + p.content + a;\n  });\n};\n\nvar escapeBlocks = function escapeBlocks(e) {\n  var r = e.split(_curlyRe);\n  var t = [];\n  var o = [];\n  var n = 0;\n  var s = [];\n\n  for (var l = 0; l < r.length; l++) {\n    var a = r[l];\n\n    if (a === CLOSE_CURLY) {\n      n--;\n    }\n\n    if (n > 0) {\n      s.push(a);\n    } else {\n      if (s.length > 0) {\n        o.push(s.join(\"\"));\n        t.push(BLOCK_PLACEHOLDER);\n        s = [];\n      }\n\n      t.push(a);\n    }\n\n    if (a === OPEN_CURLY) {\n      n++;\n    }\n  }\n\n  if (s.length > 0) {\n    o.push(s.join(\"\"));\n    t.push(BLOCK_PLACEHOLDER);\n  }\n\n  var c = {\n    escapedString: t.join(\"\"),\n    blocks: o\n  };\n  return c;\n};\n\nvar insertPolyfillHostInCssText = function insertPolyfillHostInCssText(e) {\n  e = e.replace(_colonHostContextRe, _polyfillHostContext).replace(_colonHostRe, _polyfillHost).replace(_colonSlottedRe, _polyfillSlotted);\n  return e;\n};\n\nvar convertColonRule = function convertColonRule(e, r, t) {\n  return e.replace(r, function () {\n    var e = [];\n\n    for (var r = 0; r < arguments.length; r++) {\n      e[r] = arguments[r];\n    }\n\n    if (e[2]) {\n      var o = e[2].split(\",\");\n      var n = [];\n\n      for (var s = 0; s < o.length; s++) {\n        var l = o[s].trim();\n        if (!l) break;\n        n.push(t(_polyfillHostNoCombinator, l, e[3]));\n      }\n\n      return n.join(\",\");\n    } else {\n      return _polyfillHostNoCombinator + e[3];\n    }\n  });\n};\n\nvar colonHostPartReplacer = function colonHostPartReplacer(e, r, t) {\n  return e + r.replace(_polyfillHost, \"\") + t;\n};\n\nvar convertColonHost = function convertColonHost(e) {\n  return convertColonRule(e, _cssColonHostRe, colonHostPartReplacer);\n};\n\nvar colonHostContextPartReplacer = function colonHostContextPartReplacer(e, r, t) {\n  if (r.indexOf(_polyfillHost) > -1) {\n    return colonHostPartReplacer(e, r, t);\n  } else {\n    return e + r + t + \", \" + r + \" \" + e + t;\n  }\n};\n\nvar convertColonSlotted = function convertColonSlotted(e, r) {\n  var t = \".\" + r + \" > \";\n  var o = [];\n  e = e.replace(_cssColonSlottedRe, function () {\n    var e = [];\n\n    for (var r = 0; r < arguments.length; r++) {\n      e[r] = arguments[r];\n    }\n\n    if (e[2]) {\n      var n = e[2].trim();\n      var s = e[3];\n      var l = t + n + s;\n      var a = \"\";\n\n      for (var c = e[4] - 1; c >= 0; c--) {\n        var i = e[5][c];\n\n        if (i === \"}\" || i === \",\") {\n          break;\n        }\n\n        a = i + a;\n      }\n\n      var p = a + l;\n      var v = \"\" + a.trimRight() + l.trim();\n\n      if (p.trim() !== v.trim()) {\n        var f = v + \", \" + p;\n        o.push({\n          orgSelector: p,\n          updatedSelector: f\n        });\n      }\n\n      return l;\n    } else {\n      return _polyfillHostNoCombinator + e[3];\n    }\n  });\n  return {\n    selectors: o,\n    cssText: e\n  };\n};\n\nvar convertColonHostContext = function convertColonHostContext(e) {\n  return convertColonRule(e, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\n\nvar convertShadowDOMSelectors = function convertShadowDOMSelectors(e) {\n  return _shadowDOMSelectorsRe.reduce(function (e, r) {\n    return e.replace(r, \" \");\n  }, e);\n};\n\nvar makeScopeMatcher = function makeScopeMatcher(e) {\n  var r = /\\[/g;\n  var t = /\\]/g;\n  e = e.replace(r, \"\\\\[\").replace(t, \"\\\\]\");\n  return new RegExp(\"^(\" + e + \")\" + _selectorReSuffix, \"m\");\n};\n\nvar selectorNeedsScoping = function selectorNeedsScoping(e, r) {\n  var t = makeScopeMatcher(r);\n  return !t.test(e);\n};\n\nvar applySimpleSelectorScope = function applySimpleSelectorScope(e, r, t) {\n  _polyfillHostRe.lastIndex = 0;\n\n  if (_polyfillHostRe.test(e)) {\n    var o = \".\" + t;\n    return e.replace(_polyfillHostNoCombinatorRe, function (e, r) {\n      return r.replace(/([^:]*)(:*)(.*)/, function (e, r, t, n) {\n        return r + o + t + n;\n      });\n    }).replace(_polyfillHostRe, o + \" \");\n  }\n\n  return r + \" \" + e;\n};\n\nvar applyStrictSelectorScope = function applyStrictSelectorScope(e, r, t) {\n  var o = /\\[is=([^\\]]*)\\]/g;\n  r = r.replace(o, function (e) {\n    var r = [];\n\n    for (var t = 1; t < arguments.length; t++) {\n      r[t - 1] = arguments[t];\n    }\n\n    return r[0];\n  });\n  var n = \".\" + r;\n\n  var s = function s(e) {\n    var o = e.trim();\n\n    if (!o) {\n      return \"\";\n    }\n\n    if (e.indexOf(_polyfillHostNoCombinator) > -1) {\n      o = applySimpleSelectorScope(e, r, t);\n    } else {\n      var s = e.replace(_polyfillHostRe, \"\");\n\n      if (s.length > 0) {\n        var l = s.match(/([^:]*)(:*)(.*)/);\n\n        if (l) {\n          o = l[1] + n + l[2] + l[3];\n        }\n      }\n    }\n\n    return o;\n  };\n\n  var l = safeSelector(e);\n  e = l.content;\n  var a = \"\";\n  var c = 0;\n  var i;\n  var p = /( |>|\\+|~(?!=))\\s*/g;\n  var v = e.indexOf(_polyfillHostNoCombinator) > -1;\n  var f = !v;\n\n  while ((i = p.exec(e)) !== null) {\n    var u = i[1];\n\n    var _ = e.slice(c, i.index).trim();\n\n    f = f || _.indexOf(_polyfillHostNoCombinator) > -1;\n    var h = f ? s(_) : _;\n    a += h + \" \" + u + \" \";\n    c = p.lastIndex;\n  }\n\n  var m = e.substring(c);\n  f = f || m.indexOf(_polyfillHostNoCombinator) > -1;\n  a += f ? s(m) : m;\n  return restoreSafeSelector(l.placeholders, a);\n};\n\nvar scopeSelector = function scopeSelector(e, r, t, o) {\n  return e.split(\",\").map(function (e) {\n    if (o && e.indexOf(\".\" + o) > -1) {\n      return e.trim();\n    }\n\n    if (selectorNeedsScoping(e, r)) {\n      return applyStrictSelectorScope(e, r, t).trim();\n    } else {\n      return e.trim();\n    }\n  }).join(\", \");\n};\n\nvar scopeSelectors = function scopeSelectors(e, r, t, o, n) {\n  return processRules(e, function (e) {\n    var n = e.selector;\n    var s = e.content;\n\n    if (e.selector[0] !== \"@\") {\n      n = scopeSelector(e.selector, r, t, o);\n    } else if (e.selector.startsWith(\"@media\") || e.selector.startsWith(\"@supports\") || e.selector.startsWith(\"@page\") || e.selector.startsWith(\"@document\")) {\n      s = scopeSelectors(e.content, r, t, o);\n    }\n\n    var l = {\n      selector: n.replace(/\\s{2,}/g, \" \").trim(),\n      content: s\n    };\n    return l;\n  });\n};\n\nvar scopeCssText = function scopeCssText(e, r, t, o, n) {\n  e = insertPolyfillHostInCssText(e);\n  e = convertColonHost(e);\n  e = convertColonHostContext(e);\n  var s = convertColonSlotted(e, o);\n  e = s.cssText;\n  e = convertShadowDOMSelectors(e);\n\n  if (r) {\n    e = scopeSelectors(e, r, t, o);\n  }\n\n  e = e.replace(/-shadowcsshost-no-combinator/g, \".\" + t);\n  e = e.replace(/>\\s*\\*\\s+([^{, ]+)/gm, \" $1 \");\n  return {\n    cssText: e.trim(),\n    slottedSelectors: s.selectors\n  };\n};\n\nvar scopeCss = function scopeCss(e, r, t) {\n  var o = r + \"-h\";\n  var n = r + \"-s\";\n  var s = extractCommentsWithHash(e);\n  e = stripComments(e);\n  var l = [];\n\n  if (t) {\n    var a = function a(e) {\n      var r = \"/*!@___\" + l.length + \"___*/\";\n      var t = \"/*!@\" + e.selector + \"*/\";\n      l.push({\n        placeholder: r,\n        comment: t\n      });\n      e.selector = r + e.selector;\n      return e;\n    };\n\n    e = processRules(e, function (e) {\n      if (e.selector[0] !== \"@\") {\n        return a(e);\n      } else if (e.selector.startsWith(\"@media\") || e.selector.startsWith(\"@supports\") || e.selector.startsWith(\"@page\") || e.selector.startsWith(\"@document\")) {\n        e.content = processRules(e.content, a);\n        return e;\n      }\n\n      return e;\n    });\n  }\n\n  var c = scopeCssText(e, r, o, n);\n  e = __spreadArrays([c.cssText], s).join(\"\\n\");\n\n  if (t) {\n    l.forEach(function (r) {\n      var t = r.placeholder,\n          o = r.comment;\n      e = e.replace(t, o);\n    });\n  }\n\n  c.slottedSelectors.forEach(function (r) {\n    e = e.replace(r.orgSelector, r.updatedSelector);\n  });\n  return e;\n};\n\nexport { scopeCss };"],"sourceRoot":""}