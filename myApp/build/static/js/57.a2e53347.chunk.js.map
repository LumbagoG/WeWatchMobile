{"version":3,"sources":["../node_modules/ionicons/dist/esm-es5/ion-icon.entry.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Icon","_index_e0fb4cab_js__WEBPACK_IMPORTED_MODULE_0__","_utils_6f78da88_js__WEBPACK_IMPORTED_MODULE_1__","isValid","elm","nodeType","nodeName","toLowerCase","i","attributes","length","val","value","Object","indexOf","childNodes","ioniconContent","Map","requests","getSvgContent","url","sanitize","req","get","fetch","document","set","Promise","resolve","then","rsp","ok","text","svgContent","div","createElement","innerHTML","removeChild","svgElm","firstElementChild","svgClass","getAttribute","setAttribute","trim","validateContent","hostRef","this","isVisible","mode","getIonMode","lazy","prototype","connectedCallback","_this","waitUntilVisible","el","loadIcon","disconnectedCallback","io","disconnect","undefined","rootMargin","cb","window","IntersectionObserver","io_1","data","isIntersecting","observe","url_1","has","ariaLabel","ariaHidden","label","name","icon","ios","md","replace","render","_a","_b","flipRtl","role","class","assign","createColorClasses","color","size","ownerDocument","dir","defineProperty","enumerable","configurable","src","documentElement","ion-color","style"],"mappings":"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","file":"static/js/57.a2e53347.chunk.js","sourcesContent":["import { r as registerInstance, h, H as Host, c as getElement } from './index-e0fb4cab.js';\nimport { i as isStr, g as getUrl, b as getName } from './utils-6f78da88.js';\n\nvar validateContent = function validateContent(svgContent) {\n  var div = document.createElement('div');\n  div.innerHTML = svgContent; // setup this way to ensure it works on our buddy IE\n\n  for (var i = div.childNodes.length - 1; i >= 0; i--) {\n    if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n      div.removeChild(div.childNodes[i]);\n    }\n  } // must only have 1 root element\n\n\n  var svgElm = div.firstElementChild;\n\n  if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n    var svgClass = svgElm.getAttribute('class') || '';\n    svgElm.setAttribute('class', (svgClass + ' s-ion-icon').trim()); // root element must be an svg\n    // lets double check we've got valid elements\n    // do not allow scripts\n\n    if (isValid(svgElm)) {\n      return div.innerHTML;\n    }\n  }\n\n  return '';\n};\n\nvar isValid = function isValid(elm) {\n  if (elm.nodeType === 1) {\n    if (elm.nodeName.toLowerCase() === 'script') {\n      return false;\n    }\n\n    for (var i = 0; i < elm.attributes.length; i++) {\n      var val = elm.attributes[i].value;\n\n      if (isStr(val) && val.toLowerCase().indexOf('on') === 0) {\n        return false;\n      }\n    }\n\n    for (var i = 0; i < elm.childNodes.length; i++) {\n      if (!isValid(elm.childNodes[i])) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nvar ioniconContent = new Map();\nvar requests = new Map();\n\nvar getSvgContent = function getSvgContent(url, sanitize) {\n  // see if we already have a request for this url\n  var req = requests.get(url);\n\n  if (!req) {\n    if (typeof fetch !== 'undefined' && typeof document !== 'undefined') {\n      // we don't already have a request\n      req = fetch(url).then(function (rsp) {\n        if (rsp.ok) {\n          return rsp.text().then(function (svgContent) {\n            if (svgContent && sanitize !== false) {\n              svgContent = validateContent(svgContent);\n            }\n\n            ioniconContent.set(url, svgContent || '');\n          });\n        }\n\n        ioniconContent.set(url, '');\n      }); // cache for the same requests\n\n      requests.set(url, req);\n    } else {\n      // set to empty for ssr scenarios and resolve promise\n      ioniconContent.set(url, '');\n      return Promise.resolve();\n    }\n  }\n\n  return req;\n};\n\nvar iconCss = \":host{display:inline-block;width:1em;height:1em;contain:strict;fill:currentColor;-webkit-box-sizing:content-box !important;box-sizing:content-box !important}:host .ionicon{stroke:currentColor}.ionicon-fill-none{fill:none}.ionicon-stroke-width{stroke-width:32px;stroke-width:var(--ionicon-stroke-width, 32px)}.icon-inner,.ionicon,svg{display:block;height:100%;width:100%}:host(.flip-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}:host(.icon-small){font-size:18px !important}:host(.icon-large){font-size:32px !important}:host(.ion-color){color:var(--ion-color-base) !important}:host(.ion-color-primary){--ion-color-base:var(--ion-color-primary, #3880ff)}:host(.ion-color-secondary){--ion-color-base:var(--ion-color-secondary, #0cd1e8)}:host(.ion-color-tertiary){--ion-color-base:var(--ion-color-tertiary, #f4a942)}:host(.ion-color-success){--ion-color-base:var(--ion-color-success, #10dc60)}:host(.ion-color-warning){--ion-color-base:var(--ion-color-warning, #ffce00)}:host(.ion-color-danger){--ion-color-base:var(--ion-color-danger, #f14141)}:host(.ion-color-light){--ion-color-base:var(--ion-color-light, #f4f5f8)}:host(.ion-color-medium){--ion-color-base:var(--ion-color-medium, #989aa2)}:host(.ion-color-dark){--ion-color-base:var(--ion-color-dark, #222428)}\";\n\nvar Icon =\n/** @class */\nfunction () {\n  function Icon(hostRef) {\n    registerInstance(this, hostRef);\n    this.isVisible = false;\n    /**\n     * The mode determines which platform styles to use.\n     */\n\n    this.mode = getIonMode();\n    /**\n     * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\n     * Default, `false`.\n     */\n\n    this.lazy = false;\n    /**\n     * When set to `false`, SVG content that is HTTP fetched will not be checked\n     * if the response SVG content has any `<script>` elements, or any attributes\n     * that start with `on`, such as `onclick`.\n     * @default true\n     */\n\n    this.sanitize = true;\n  }\n\n  Icon.prototype.connectedCallback = function () {\n    var _this = this; // purposely do not return the promise here because loading\n    // the svg file should not hold up loading the app\n    // only load the svg if it's visible\n\n\n    this.waitUntilVisible(this.el, '50px', function () {\n      _this.isVisible = true;\n\n      _this.loadIcon();\n    });\n  };\n\n  Icon.prototype.disconnectedCallback = function () {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  };\n\n  Icon.prototype.waitUntilVisible = function (el, rootMargin, cb) {\n    var _this = this;\n\n    if (this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n      var io_1 = this.io = new window.IntersectionObserver(function (data) {\n        if (data[0].isIntersecting) {\n          io_1.disconnect();\n          _this.io = undefined;\n          cb();\n        }\n      }, {\n        rootMargin: rootMargin\n      });\n      io_1.observe(el);\n    } else {\n      // browser doesn't support IntersectionObserver\n      // so just fallback to always show it\n      cb();\n    }\n  };\n\n  Icon.prototype.loadIcon = function () {\n    var _this = this;\n\n    if (this.isVisible) {\n      var url_1 = getUrl(this);\n\n      if (url_1) {\n        if (ioniconContent.has(url_1)) {\n          // sync if it's already loaded\n          this.svgContent = ioniconContent.get(url_1);\n        } else {\n          // async if it hasn't been loaded\n          getSvgContent(url_1, this.sanitize).then(function () {\n            return _this.svgContent = ioniconContent.get(url_1);\n          });\n        }\n      }\n    }\n\n    if (!this.ariaLabel && this.ariaHidden !== 'true') {\n      var label = getName(this.name, this.icon, this.mode, this.ios, this.md); // user did not provide a label\n      // come up with the label based on the icon name\n\n      if (label) {\n        this.ariaLabel = label.replace(/\\-/g, ' ');\n      }\n    }\n  };\n\n  Icon.prototype.render = function () {\n    var _a, _b;\n\n    var mode = this.mode || 'md';\n    var flipRtl = this.flipRtl || this.ariaLabel && (this.ariaLabel.indexOf('arrow') > -1 || this.ariaLabel.indexOf('chevron') > -1) && this.flipRtl !== false;\n    return h(Host, {\n      role: \"img\",\n      class: Object.assign(Object.assign((_a = {}, _a[mode] = true, _a), createColorClasses(this.color)), (_b = {}, _b[\"icon-\" + this.size] = !!this.size, _b['flip-rtl'] = !!flipRtl && this.el.ownerDocument.dir === 'rtl', _b))\n    }, this.svgContent ? h(\"div\", {\n      class: \"icon-inner\",\n      innerHTML: this.svgContent\n    }) : h(\"div\", {\n      class: \"icon-inner\"\n    }));\n  };\n\n  Object.defineProperty(Icon, \"assetsDirs\", {\n    get: function get() {\n      return [\"svg\"];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Icon.prototype, \"el\", {\n    get: function get() {\n      return getElement(this);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Icon, \"watchers\", {\n    get: function get() {\n      return {\n        \"name\": [\"loadIcon\"],\n        \"src\": [\"loadIcon\"],\n        \"icon\": [\"loadIcon\"]\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Icon;\n}();\n\nvar getIonMode = function getIonMode() {\n  return typeof document !== 'undefined' && document.documentElement.getAttribute('mode') || 'md';\n};\n\nvar createColorClasses = function createColorClasses(color) {\n  var _a;\n\n  return color ? (_a = {\n    'ion-color': true\n  }, _a[\"ion-color-\" + color] = true, _a) : null;\n};\n\nIcon.style = iconCss;\nexport { Icon as ion_icon };"],"sourceRoot":""}